#!/bin/bash

set -o errexit # script exits when a command fails == set -e
set -o nounset # script exits when tries to use undeclared variables == set -u
set -o pipefail # causes pipelines to retain / set the last non-zero status
  
message=${BUILDKITE_PLUGIN_HELM_MESSAGE:-"Update Helm Tarballs"}
username=${BUILDKITE_PLUGIN_HELM_USER_NAME:-""}
email=${BUILDKITE_PLUGIN_HELM_USER_EMAIL:-""}
ssh_commit=${BUILDKITE_PLUGIN_HELM_SSH:-"false"}

find . -name Chart.yaml -type f | while read -r chartfile; do
    chart_dir=$(dirname "$chartfile")
    dep_length=$(yq '.dependencies | length' "$chartfile")
    if [[ "${dep_length}" -gt "0" ]]; then
        pushd "$chart_dir" || exit 1
        helm dependency update
        popd || exit 1
    else
        echo "Skipping $chartfile since no dependencies were found"
        continue
    fi

    git add "${chart_dir}"
done


result=$(git diff --cached --exit-code >> /dev/null; echo $?)

if [ "${result}" -ne "0" ]; then
    if [[ -n ${username} ]]
    then
    git config user.name "$username"
    fi

    if [[ -n ${email} ]]
    then
    git config user.email "$email"
    fi

    git checkout -b "${BUILDKITE_BRANCH}"
    git commit -m "${message}"

    # set to use ssh instead of https if requested, otherwise use https with GITHUB_TOKEN
    if [[ "${ssh_commit}" == "true" ]]
    then
        git config url."git@github.com:".insteadOf "https://github.com/"
        git push origin "${BUILDKITE_BRANCH}"
    else 
        repo=$(echo "${BUILDKITE_REPO}" | sed 's/https:\/\///')
        git push -u "https://${username}:${GITHUB_TOKEN}@${repo}" "${BUILDKITE_BRANCH}"
    fi

else
  echo "--- No changes to commit"
fi

exit 0